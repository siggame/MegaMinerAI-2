///////////////////////////////////////////////////////////////////////////////
/// @file   Wall.cpp
///
/// @author Ben
//
/// @brief  Implementation of the Wall class
///////////////////////////////////////////////////////////////////////////////
#include "Wall.h"

#include <string>
#include <sstream>
using std::string;
using std::ostringstream;


///////////////////////////////////////////////////////////////////////////////
/// @brief  Default constructor
///////////////////////////////////////////////////////////////////////////////
Wall::Wall()
{
    setLocation(0,0);
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Constructor that sets the location and id
///
/// @param  location The location of the wall
/// @param  id The id of the wall
///////////////////////////////////////////////////////////////////////////////
Wall::Wall(const Coordinate& location, int id)
{
    setLocation(location);
    setId(id);
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Copy Constructor
///////////////////////////////////////////////////////////////////////////////
Wall::Wall(const Wall& right)
{
    *this = right;
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Assignment Operator
///////////////////////////////////////////////////////////////////////////////
Wall& Wall::operator=(const Wall& right)
{
    setLocation(right.location());
    setId(right.id());
    return *this;
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Equivalency operator
///
/// @param  right The Wall to compare to
///
/// @return True if their id's are equal, false otherwise
///////////////////////////////////////////////////////////////////////////////
bool Wall::operator==(const Wall& right) const
{
    return (id() == right.id());
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Converts the Wall into a string
///
/// @return A string representation of the Wall
///////////////////////////////////////////////////////////////////////////////
string Wall::toString()
{
    ostringstream sout;
    
    sout << "Wall " << id() << " at " << location().toString();
    
    return sout.str();
}
