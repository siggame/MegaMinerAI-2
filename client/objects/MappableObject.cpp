///////////////////////////////////////////////////////////////////////////////
/// @file   MappableObject.cpp
///
/// @author Ben
///
/// @brief  Implementation of the MappableObject class
///////////////////////////////////////////////////////////////////////////////
#include "MappableObject.h"
#include "Coordinate.h"

#include <string>
#include <sstream>
using std::string;
using std::ostringstream;


///////////////////////////////////////////////////////////////////////////////
/// @brief  Constructor
///////////////////////////////////////////////////////////////////////////////
MappableObject::MappableObject()
{
    m_location = Coordinate(0,0);
    m_id = -1;
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Destructor
///////////////////////////////////////////////////////////////////////////////
MappableObject::~MappableObject()
{

}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Copy Constructor
///////////////////////////////////////////////////////////////////////////////
MappableObject::MappableObject(const MappableObject& right)
{
    *this = right;
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Assignment operator
///////////////////////////////////////////////////////////////////////////////
MappableObject& MappableObject::operator=(const MappableObject& right)
{
    m_location = right.m_location;
    m_id = right.m_id;
    return *this;
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Returns the location of the object
///
/// @return The location of the object
///////////////////////////////////////////////////////////////////////////////
Coordinate MappableObject::location() const
{
    return m_location;
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Sets the location of the object
///
/// @param  X the x coordinate to set to
/// @param  Y the y coordinate to set to
///////////////////////////////////////////////////////////////////////////////
void MappableObject::setLocation(int X, int Y)
{
    m_location = Coordinate(X,Y);
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Sets the location of the object
///
/// @param  right The new location
///////////////////////////////////////////////////////////////////////////////
void MappableObject::setLocation(const Coordinate& right)
{
    m_location = right;
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Returns the id of the object
///
/// @return The id of the object
///////////////////////////////////////////////////////////////////////////////
int MappableObject::id() const
{
   return m_id;
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Sets the id of the object
///
/// @param  id The new id of the object
///////////////////////////////////////////////////////////////////////////////
void MappableObject::setId(int id)
{
   m_id = id;
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Returns the manhattan distance from the object to a coordinate
///
/// @param  calcTo The coordinate to calculate the distance to
///
/// @return The manhattan distance to calcTo
///////////////////////////////////////////////////////////////////////////////
unsigned int MappableObject::distanceTo(const Coordinate& calcTo) const
{
    return calcTo.distanceTo( location() );
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Returns the manhattan distance from the object to another object
///
/// @param  calcTo The object to calculate the distance to
///
/// @return The manhattan distance to calcTo
///////////////////////////////////////////////////////////////////////////////
unsigned int MappableObject::distanceTo(const MappableObject& calcTo) const
{
    return calcTo.location().distanceTo( location() );
}


///////////////////////////////////////////////////////////////////////////////
/// @brief  Converts the object into a string
///
/// @return The string representation of the object
///////////////////////////////////////////////////////////////////////////////
string MappableObject::toString() const
{
    ostringstream sout;
    sout << "Mappable object " << id() << " at " << location().toString();
    return sout.str();
}
